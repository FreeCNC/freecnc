#!/usr/bin/scons
# This might not even work
from os import environ, popen, getenv
from glob import glob
from sys import platform

# Source files
source = glob("freecnc/*.cpp")
source += glob("freecnc/*/*.cpp")
source += glob("freecnc/*/*/*.cpp")
#luasource += glob("#/lua/*.c")

# Import PATH and optional MINGW environment variables to allow zx64 to cross compile
# See http://zx64.uwcs.co.uk/freecnc/crossdev/
if platform == "linux2":
    env = Environment(ENV = {"PATH" : environ["PATH"], "MINGW" : getenv("MINGW")})
else:
    env = Environment()
# Don't clutter the source tree with multiple .sconsign files
env.SConsignFile()

# TODO: What about native mingw32?
if platform == "win32":
    print "ERROR: Use the project files instead."
    Exit(1)

#if platform not in ["linux2", "darwin", "freebsd"]:
if platform not in ["linux2"]:
    print "%s is not supported at this time." % platform
    Exit(1)

if platform == "freebsd":
    print "NOTE: FreeBSD isn't frequently tested"
    sdlconfname = "sdl11-config"
else:
    sdlconfname = "sdl-config"

env.ParseConfig(sdlconfname + " --cflags --libs")

env["CPPPATH"] += ["#/freecnc", "#/freecnc/game", "#/freecnc/screens",
    "#/freecnc/lib", "#/freecnc/renderer", "#/freecnc/sound", "#/freecnc/ui",
    "#/freecnc/vfs", "#/freecnc/legacyvfs"]
try:
    if env["ENV"]["MINGW"] != "1":
        env["CXXFLAGS"] += ["-std=c++98", "-Wconversion", "-Wno-unused-parameter"]
except: # No mingw env variable
    env["CXXFLAGS"] += ["-std=c++98", "-Wconversion", "-Wno-unused-parameter"]

env["LIBS"] += ["SDL_mixer", "boost_program_options", "boost_filesystem"]

release = env.Copy()
release["CXXFLAGS"] += ["-Os"]
release["CCFLAGS"] += ["-Os"]
release["LINKFLAGS"] += ["-s"]
debug = env.Copy()
debug["CXXFLAGS"] += ["-g"]

if ARGUMENTS.get("RELEASE", 0):
    env = release
else:
    env = debug

env.Program(target = "bin/freecnc", source = source)

# Only build tools if specified
if ARGUMENTS.get("TOOLS", 0):
    commonobjects = glob("src/vfs/*.cpp") + glob("src/vfs/*/*.cpp")
    commonobjects += ["#/src/misc/inifile.o", "#/src/misc/common.o", "#/src/ui/logger.o", "#/src/misc/compression.o"]
    commonobjects += ["#/src/video/shpimage.o", "#/src/ui/font.o", "#/src/video/imageproc.o", "#/src/video/message.o"]

    mixshell_source = glob("tools/mixshell/*.cpp") + ["#/src/vfs/mix/ws-key.o"]
    mixshell_incs = env["CPPPATH"] + ["#/tools/mixshell", "#/src/vfs/mix"]
    env.Program(target = "#/tools/mixshell/mixshell", source = mixshell_source, CPPPATH = mixshell_incs)

    for tool in ["shpview", "tmpinied"]:
        tool_source = glob("tools/"+tool+"/*.cpp") + commonobjects
        env.Program(target = tool, source = tool_source)

