#!/usr/bin/scons
from glob import glob
from sys import platform

source  = glob("freecnc/*.cpp")
source += glob("freecnc/*/*.cpp")
source += glob("freecnc/*/*/*.cpp")
luasource = glob("lua/*.c")
source += luasource
source  = [f for f in source if "win32" not in f]

env = Environment()

# Don't clutter the source tree with multiple .sconsign files
env.SConsignFile()

if platform != "linux2":
    print "Warning: Building for \"%s\" is not tested or supported at this time." % platform

env.ParseConfig("pkg-config sdl --cflags --libs")

env["CXXFLAGS"] += ["-Wall", "-std=c++98", "-Wconversion", "-Wno-unused-parameter"]
env["LIBS"]     += ["SDL_mixer", "boost_program_options-mt", "boost_filesystem-mt", "boost_system-mt", "dl", "lua"]

release = env.Clone()
release["CXXFLAGS"] += ["-Os"]
release["CCFLAGS"] += ["-Os"]
release["LINKFLAGS"] += ["-s"]
debug = env.Clone()
debug["CXXFLAGS"] += ["-g3", "-ggdb", "-O0"]

if ARGUMENTS.get("RELEASE", 0):
    env = release
else:
    env = debug

env.Program(target = "bin/freecnc", source = source)

# Only build tools if specified
if ARGUMENTS.get("TOOLS", 0):
    vfs = glob("freecnc/vfs/*.cpp")
    vfs += ["#/freecnc/lib/westwood_key.o", "#/freecnc/lib/blowfish.o"]
    vfs += ["#/freecnc/scripting/gameconfigscript.o", "#/freecnc/scripting/luascript.o"]
    vfs.extend(luasource)

    tmpinied_objects = ["#/freecnc/lib/inifile.o", "#/freecnc/lib/common.o",
        "#/freecnc/lib/compression.o", "#/freecnc/renderer/shpimage.o",
        "#/freecnc/ui/font.o", "#/freecnc/renderer/imageproc.o"]

    tmpinied_objects.extend(vfs)

    tmpinied_src = glob("tmpinied/*.cpp") + tmpinied_objects
    env.Program(target = "bin/tmpinied", source = tmpinied_src)

    env.Program(target = "bin/vfscli", source = ["#/vfscli/vfscli.cpp"] + vfs)

    env.Program(target = "bin/lua", source = ["#/lua/tools/lua.c"] + luasource)
    env.Program(target = "bin/luac", source = ["#/lua/tools/luac.c"] + luasource)
