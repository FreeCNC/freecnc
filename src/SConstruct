#!/usr/bin/scons
# This might not even work
from glob import glob
from sys import platform

# Source files
source = glob("freecnc/*.cpp")
source += glob("freecnc/*/*.cpp")
source += glob("freecnc/*/*/*.cpp")
source = [f for f in source if "win32" not in f]

#luasource += glob("#/lua/*.c")

env = Environment()

# Don't clutter the source tree with multiple .sconsign files
env.SConsignFile()

if platform == "win32":
    print "ERROR: Use the project files instead."
    Exit(1)

#if platform not in ["linux2", "darwin", "freebsd"]:
if platform not in ["linux2"]:
    print "%s is not supported at this time." % platform
    Exit(1)

if platform == "freebsd":
    print "NOTE: FreeBSD isn't frequently tested"
    sdlconfname = "sdl11-config"
else:
    sdlconfname = "sdl-config"

env.ParseConfig(sdlconfname + " --cflags --libs")

env["CXXFLAGS"] += ["-Wall", "-std=c++98", "-Wconversion", "-Wno-unused-parameter"]

env["LIBS"] += ["SDL_mixer", "boost_program_options", "boost_filesystem"]

release = env.Copy()
release["CXXFLAGS"] += ["-Os"]
release["CCFLAGS"] += ["-Os"]
release["LINKFLAGS"] += ["-s"]
debug = env.Copy()
debug["CXXFLAGS"] += ["-g3", "-ggdb", "-O0"]

if ARGUMENTS.get("RELEASE", 0):
    env = release
else:
    env = debug

env.Program(target = "bin/freecnc", source = source)

# Only build tools if specified
if ARGUMENTS.get("TOOLS", 0):
    commonobjects = glob("freecnc/vfs/*.cpp")
    commonobjects += ["#/freecnc/lib/inifile.o", "#/freecnc/lib/common.o",
        "#/freecnc/lib/compression.o", "#/freecnc/lib/westwood_key.o",
        "#/freecnc/lib/blowfish.o"]
    commonobjects += ["#/freecnc/renderer/shpimage.o", "#/freecnc/ui/font.o", "#/freecnc/renderer/imageproc.o"]

    for tool in ["tmpinied"]:
        tool_source = glob(tool+"/*.cpp") + commonobjects
        env.Program(target = "bin/" + tool, source = tool_source)

